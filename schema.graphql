type FundsDistributed @entity(immutable: true) {
  id: Bytes!
  projectId: BigInt! # uint256
  amount: BigInt! # uint256
  isEth: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProgressReviewed @entity(immutable: true) {
  id: Bytes!
  projectId: BigInt! # uint256
  comment: String! # string
  approved: Boolean! # bool
  currentProgress: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProgressUpdated @entity(immutable: true) {
  id: Bytes!
  projectId: BigInt! # uint256
  progress: BigInt! # uint256
  details: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProjectCreated @entity(immutable: true) {
  id: Bytes!
  projectId: BigInt! # uint256
  creator: Bytes! # address
  _description: String! # string
  _link: String! # string
  _title: String! # string
  goalAmount: BigInt! # uint256
  deadline: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProjectFunded @entity(immutable: true) {
  id: Bytes!
  projectId: BigInt! # uint256
  supporter: Bytes! # address
  amount: BigInt! # uint256
  isEth: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RefundIssued @entity(immutable: true) {
  id: Bytes!
  projectId: BigInt! # uint256
  supporter: Bytes! # address
  amount: BigInt! # uint256
  isEth: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
